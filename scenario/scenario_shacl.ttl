@prefix scenario: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/scenario/> .
@prefix openlabel: <https://openlabel.asam.net/V1-0-0/ontologies/> .
@prefix hdmap: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/hdmap/> .
@prefix environment-model: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/environment-model/> .
@prefix envited-x: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/envited-x/> .
@prefix manifest: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/manifest/> .
@prefix georeference: <https://github.com/GAIA-X4PLC-AAD/ontology-management-base/tree/main/georeference/> .
@prefix gx: <https://registry.lab.gaia-x.eu/development/api/trusted-shape-registry/v1/shapes/jsonld/trustframework#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

scenario:ScenarioShape a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [
        sh:path scenario:hasDataResource ;
        sh:node envited-x:DataResourceShape ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Each scenario must have one associated DataResource object containing name and description."@en ;
    ] ;
    sh:property [
        sh:path scenario:hasDataResourceExtension ;
        sh:node scenario:DataResourceShapeExtension ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Each scenario must have one associated DataResourceExtension object with format, content, quantity, quality, dataSource, and georeference."@en ;
    ] ;
    sh:property [
        sh:path scenario:hasManifest ;
        sh:or ( 
            [
                sh:and (
                    [ sh:class scenario:Manifest ]
                    [ sh:node manifest:ManifestShape ]
                    [ sh:node scenario:ManifestShape ]
                )
            ] 
            [
                sh:node manifest:LinkShape
            ] 
        ) ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Each scenario must have exactly one manifest, either inline or via link."@en ;
    ] ;
    sh:targetClass scenario:Scenario .

scenario:DataResourceShapeExtension a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property 
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node scenario:FormatShape ;
            sh:name "format object"@en ;
            sh:description "Contains properties to describe the format of the scenario asset."@en ;
            sh:order 1 ;
            sh:path scenario:hasFormat
        ],
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node scenario:ContentShape ;
            sh:name "content object"@en ;
            sh:description "Defines the content (road types, lane types, object types, traffic direction) of the HD map asset."@en ;
            sh:order 2 ;
            sh:path scenario:hasContent
        ],            
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node scenario:QuantityShape ;
            sh:name "quantity object"@en ;
            sh:description "Contains properties to describe the quantity (e.g. number of intersections, traffic lights, signs, length, range of speed limits/elevations) of the HD map asset."@en ;
            sh:order 3 ;
            sh:path scenario:hasQuantity
        ],            
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node scenario:QualityShape ;
            sh:name "quality object"@en ;
            sh:description "Contains properties to describe the accuracy of the HD map asset."@en ;
            sh:order 4 ;
            sh:path scenario:hasQuality
        ],
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node scenario:DataSourceShape ;
            sh:name "dataSource object"@en ;
            sh:description "Defines which data resources or measurement systems were used to create the HD map asset."@en ;
            sh:order 5 ;
            sh:path scenario:hasDataSource
        ],
        [ 
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node georeference:GeoreferenceShape ;
            sh:name "has georeferenz"@en ;
            sh:message "Each HD map must link to a georeference dataset defining the location/projection of the HD map asset."@en ;
            sh:order 6 ;
            sh:path scenario:hasGeoreference ;
        ] ;
    sh:targetClass scenario:DataResourceExtension .
 
scenario:FormatShape a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [skos:example "ASAM OpenSCENARIO" ;
            sh:description "Defines the type of data format used for the scenario asset."@en ;
            sh:in ("ASAM OpenSCENARIO") ;
            sh:maxCount 1 ;
            sh:message "Validation of type failed!"@en ;
            sh:name "type"@en ;
            sh:order 1 ;
            sh:path scenario:type ],
        [ skos:example "1.5" ;
            sh:datatype xsd:string ;
            sh:description "Defines the version of the data format used for the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of version failed!"@en ;
            sh:name "version"@en ;
            sh:order 2 ;
            sh:path scenario:version ] ;
    sh:targetClass scenario:Format .

scenario:ContentShape a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ skos:example "Functional, Logical, Concrete" ;
            sh:description "Specifies the abstraction level (as defined in the Pegasus project) of the scenario asset."@en ;
            sh:in ("Functional" "Logical" "Concrete") ;
            sh:maxCount 1 ;
            sh:message "Validation of type failed!"@en ;
            sh:name "abstraction level"@en ;
            sh:order 1 ;
            sh:path scenario:abstractionLevel ],
        [ skos:example "2009-06-30T18:30:00+02:00" ;
            sh:datatype xsd:dateTime ;
            sh:description "Optionally specifies the time associated with the scenario asset (e.g., time of recording or time of event for a synthetic scenario)."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of timeDate failed!"@en ;
            sh:minCount 0 ;
            sh:name "time date"@en ;
            sh:order 2 ;
            sh:path scenario:timeDate ],
        [ skos:example "criticality analysis, testing, specific component test (e.g. lateral movement control)"@en ;
            sh:datatype xsd:string ;
            sh:description "Defines the purpose of the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of aim failed!"@en ;
            sh:minCount 0 ;
            sh:name "aim"@en ;
            sh:order 3 ;
            sh:path scenario:aim ],
        [ skos:example "GlobalPosition" ;
            skos:example "ParameterDeclaration" ;
            sh:datatype xsd:string ;
            sh:description "Specifies which functions (e.g., actions) from the standard are utilized."@en ;
            sh:message "Validation of usedStandardFunctions failed!"@en ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:name "used functions in the standard"@en ;
            sh:order 4 ;
            sh:path scenario:usedStandardFunctions ],
        [ skos:example "via trajectory, via support points"@en ;
            sh:datatype xsd:string ;
            sh:description "Indicates the type of movement employed by traffic participants according to the ASAM OpenSCENARIO standard."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of movementDescription failed!"@en ;
            sh:name "movement description"@en ;
            sh:order 5 ;
            sh:path scenario:movementDescription ],
        [ skos:example "stopIfTTCLowerThan" ;
            sh:datatype xsd:string ;
            sh:description "Defines scenario- or domain-specific commands or actions used in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of customCommands failed!"@en ;
            sh:minCount 0 ;
            sh:name "custom commands"@en ;
            sh:order 6 ;
            sh:path scenario:customCommands ],
        [ skos:example "194.01" ;
            sh:datatype xsd:float ;
            sh:description "Defines the azimuth of the sun in degrees."@en ;
            sh:message "Validation of sunAzimuth failed!"@en ;
            sh:minCount 0 ;
            sh:name "sun azimuth"@en ;
            sh:order 10 ;
            sh:minInclusive -360 ;
            sh:maxInclusive 360 ;
            sh:path scenario:sunAzimuth ],
        [ skos:example "kangaroo crossing" ;
            sh:datatype xsd:string ;
            sh:description "Indicates which country-specific traffic signs are used in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of countrySpecificSign failed!"@en ;
            sh:minCount 0 ;
            sh:name "country specific sign"@en ;
            sh:order 11 ;
            sh:path scenario:countrySpecificSign ],
        [ skos:example "tuk tuk" ;
            sh:datatype xsd:string ;
            sh:description "Indicates which country-specific participants are used in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of countrySpecificTrafficParticipants failed!"@en ;
            sh:minCount 0 ;
            sh:name "country specific traffic participants"@en ;
            sh:order 12 ;
            sh:path scenario:countrySpecificTrafficParticipants ],
        [ skos:example "germany, not applicable" ;
            sh:datatype xsd:string ;
            sh:description "Indicates the country of origin for the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of country failed!"@en ;
            sh:minCount 0 ;
            sh:name "country"@en ;
            sh:order 13 ;
            sh:path scenario:country ] ;
    sh:targetClass scenario:Content .

scenario:QuantityShape a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ skos:example "2" ;
            sh:datatype xsd:unsignedInt ;
            sh:description "Specifies the total number of temporary traffic objects defined in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of temporaryTrafficObjects failed!"@en ;
            sh:name "temporary traffic objects"@en ;
            sh:order 1 ;
            sh:path scenario:temporaryTrafficObjects ],
        [ skos:example "10" ;
            sh:datatype xsd:unsignedInt ;
            sh:description "Specifies the total number of traffic objects defined in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of numberTrafficObjects failed!"@en ;
            sh:name "number traffic objects"@en ;
            sh:order 2 ;
            sh:path scenario:numberTrafficObjects ],
        [ skos:example "myDriver, BestPedestrianController2000" ;
            sh:datatype xsd:string ;
            sh:description "Specifies the simulation core controllers (internal or external) used in the scenario."@en ;
            sh:message "Validation of controllers failed!"@en ;
            sh:minCount 0 ;
            sh:name "controllers"@en ;
            sh:order 3 ;
            sh:path scenario:controllers ],
        [ skos:example "8" ;
            sh:datatype xsd:unsignedInt ;
            sh:description "Specifies the total number of permanent traffic objects defined in the scenario asset."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of permanentTrafficObjects failed!"@en ;
            sh:name "permanent traffic objects"@en ;
            sh:order 4 ;
            sh:path scenario:permanentTrafficObjects ] ;
    sh:targetClass scenario:Quantity .

scenario:QualityShape a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ skos:example "0.1" ;
            sh:datatype xsd:float ;
            sh:description "Defines the accuracy of moving objects in the scenario asset (only applicable for scenarios based on real measurements)."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of accuracyObjects failed!"@en ;
            sh:minCount 0 ;
            sh:name "accuracy objects"@en ;
            sh:order 1 ;
            sh:path scenario:accuracyObjects ],
        [ skos:example "Static sensor calibration performed at <origin> using system XYZ"@en ;
            sh:datatype xsd:string ;
            sh:description "Describes the calibration steps performed prior to the measurements."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of calibration failed!"@en ;
            sh:minCount 0 ;
            sh:name "calibration"@en ;
            sh:order 2 ;
            sh:path scenario:calibration ] ;
    sh:targetClass scenario:Quality .

scenario:DataSourceShape a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ skos:example "Real World Data" ;
            sh:datatype xsd:string ;
            sh:description "Specifies the category of source data used to create the scenario."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of source type failed!"@en ;
            sh:in ("Accident Database" "Real World Data" "Analytical Hazard Based Approach" "Formal Verification" "Operational Design Domain" "Ontology" "Standards, Regulations, Guidelines" "Real-world Deployment and Trials") ;
            sh:minCount 0 ;
            sh:name "source type"@en ;
            sh:order 1 ;
            sh:path scenario:sourceType ],
        [ skos:example "Test drives on proving ground XYZ and system ABC"@en ;
            sh:datatype xsd:string ;
            sh:description "Provides a detailed description of the source data used."@en ;
            sh:maxCount 1 ;
            sh:message "Validation of source description failed!"@en ;
            sh:minCount 0 ;
            sh:name "source description"@en ;
            sh:order 2 ;
            sh:path scenario:sourceDescription ] ;
    sh:targetClass scenario:DataSource .

# 1) We apply this shape to all scenario:Manifest instances
scenario:ManifestShape a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:label "Shape for scenario:Manifest"@en ;
    sh:comment "Checks that each scenario:Manifest includes external artifacts as reference in manifest:hasExternalArtifacts."@en ;
    # 2) We want to ensure that there is a Link in hasExternalArtifacts
    #    (with cardinalities or sub-shapes).
    sh:property [
        sh:path manifest:hasExternalArtifacts ;
        # Optionally require at least 1 Link in hasExternalArtifacts
        sh:minCount 1 ;
        sh:node manifest:LinkShape ;
        sh:message "The scenario manifest must have at least one external link in 'hasExternalArtifacts'."@en ;
        sh:or ( 
            [
                sh:and (
                    [ sh:class environment-model:EnvironmentModel ]
                    [ sh:node environment-model:EnvironmentModelShape ]
                )
            ] 
            [
                sh:and (
                    [ sh:class hdmap:HdMap ]
                    [ sh:node hdmap:HdMapShape ]
                )
            ]
            [
                sh:node manifest:LinkShape
            ] 
        )
    ] ;
    sh:targetClass scenario:Manifest .
